#ifndef QCM_HTTP_SERVER_H_
#define QCM_HTTP_SERVER_H_

#include <string>
#include <memory>

#include <pistache/endpoint.h>

#include <http_config.h>
//---------------------------------------------------------------
namespace Pistache {
namespace Rest {
class Router;
class Request;
}
}//namespace Pistache

namespace store {
class ConfigStorage;
}

namespace qcm {
namespace http {

class HttpServer {
  public:
    HttpServer(const std::shared_ptr<store::ConfigStorage>& config_storage);
    ~HttpServer();

  public:
    bool Start(const Config& config, bool run_in_thread);
    void Stop();

  private:
    bool BuildRouter();

    void Ping(const Pistache::Rest::Request&, Pistache::Http::ResponseWriter);
    void GetConfig(const Pistache::Rest::Request&, Pistache::Http::ResponseWriter);

  private:
    std::unique_ptr<Pistache::Http::Endpoint> server_;
    std::unique_ptr<Pistache::Rest::Router> router_;
    std::shared_ptr<store::ConfigStorage> config_storage_;
};//class HttpServer
}// namespace http
}//namespace qcm
#endif//#define QCM_HTTP_SERVER_H_
