#!/usr/bin/python
#-*-coding:utf-8-*-

import httplib,urllib;
import json;
import base64;

#km_url = "k10139v.add.bjdt.qihoo.net"
#km_url = "qbus13.add.bjdt.qihoo.net"
#km_url = "10.139.220.16"
#km_url = "10.138.88.209"
#km_url = "10.208.34.34"
#km_url = "10.172.189.222"
km_url = "localhost"
#km_url = "k6800v.add.bjyt.qihoo.net"
#km_url = "spider101.se.zzzc.qihoo.net"
#km_url = "10.138.88.209"
#km_url = "k0152v.add.zzzc.qihoo.net"
#km_url = "k5254v.add.bjdt.qihoo.net"
#km_url = "qbus3.news.bjcc.qihoo.net"
#km_url = "qbus13.add.shbt.qihoo.net"
#km_url = "w-w3.og.shcp.qihoo.net"
#km_url = "k4698v.add.shbt.qihoo.net"
#km_url= "k6138v.add.bjyt.qihoo.net"
km_port = 8888

def processPostRequest(testitem, url, headers, params):
    conn = httplib.HTTPConnection(km_url, km_port);
    conn.request(method = "POST",
                url = url,
                body = params,
                headers = headers);
    response = conn.getresponse()
    data = response.read()
    print data
    json_response = json.loads(data)
    print ("%s | errcode:%s | errmsg:%s\n" % (testitem, json_response["errcode"], json_response["errmsg"]))
    conn.close()

def processGetRequest(testitem, url):
    conn = httplib.HTTPConnection(km_url, km_port);
    #auth = base64.b64encode('admin'+ ':'+ 'password')
    #headers = {"Authorization": "Basic "+ auth}
    #conn.request(method = "GET", url = url, headers = headers)
    conn.request(method = "GET", url = url)
    response = conn.getresponse()
    data = response.read()
    print data
    json_response = json.loads(data)
    print ("%s | errcode:%s | errmsg:%s\n" % (testitem, json_response["errcode"], json_response["errmsg"]))
    conn.close()

def testAddCluster(cluster, zk):
    params = '{ "name": "' + cluster + '", "zookeeper_list": "' + zk + '"}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("addcluster",
                   "/qbus/clusters/addcluster",
                  headers,
                  params)

def testDeleteCluster(cluster_name):
    processGetRequest("deletecluster",
                   "/qbus/clusters/deletecluster?clustername=" + cluster_name);

def testListAllCluster():
    processGetRequest("listAllCluster",
                     "/qbus/clusters/listall")

def testGetClusterInfo(cluster_name):
    processGetRequest("getClusterInfo",
                      "/qbus/clusters/getclusterdetail?clustername=" + cluster_name)

def testGetTopicDetail(clustername, topic):
    processGetRequest("getTopicDetail",
                     "/qbus/topics/gettopicdetail?clustername=" + clustername + "&topic=" + topic)

def testAddTopic(cluster, topic, partitions, replications, retention, maxSend):
    params = '{ "cluster": "' + cluster + '", "topic":"' + topic + '", "partitions":' + str(partitions) + ', "replications":' + str(replications) + ', "retention":' + str(retention) + ', "max_message":' + str(maxSend) + '}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("addTopic",
                   "/qbus/topics/addtopic",
                  headers,
                  params)

def testUpdateTopicConfig(cluster, topic, retention):
    params = '{ "cluster": "' + cluster + '", "topic": "' + topic + '", "retention":' + str(retention) +'}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("updateTopicConfig",
                   "/qbus/topics/altertopic",
                  headers,
                  params)

def testDeleteTopic(clustername, topic):
    processGetRequest("deleteTopic",
                     "/qbus/topics/deletetopic?clustername=" + clustername + "&topic=" + topic)

def testAddPartition(clustername, topic, partitions):
    params = '{ "cluster": "' + clustername + '", "topic": "' + topic + '", "partitions":' + str(partitions) +'}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("addPartition",
                   "/qbus/topics/addpartition",
                  headers,
                  params)

def testGetConsumerDetail(clustername, topic, group, groupType):
    params = '{ "cluster": "' + clustername + '", "topic": "' + topic + '", "consumer_group":"' + group + '", "consumer_type":"' + groupType + '"}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("getConsumerDetail",
                   "/qbus/consumer/getconsumerdetail",
                  headers,
                  params)

def testGetLogCollectDetail(clustername, topic):
    processGetRequest("getLogCollectDetail",
                     "/qbus/log/getlogcollectdetail?clustername=" + clustername + "&topic=" + topic)

def testGetClusterDiskInfo(clustername):
    processGetRequest("getClusterDiskInfo",
                     "/qbus/clusters/getclusterdiskinfo?clustername=" + clustername)

def testSetTopicMaxSize(clustername, topic, maxsize):
    params = '{ "cluster": "' + clustername + '", "topic": "' + topic + '", "maxsize":"' + str(maxsize) +'"}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("setTopicMaxSize",
                   "/qbus/topics/settopicmaxsize",
                  headers,
                  params)

def testGetOverageTopicList(clustername):
    processGetRequest("getOverageTopicList",
                     "/qbus/topics/getoveragetopiclist?clustername=" + clustername)

def testGetConsumerAndProducerList(clustername, topic):
    processGetRequest("getConsumerAndProducerList",
                     "/qbus/topics/getconsumerandproducerlist?clustername=" + clustername + "&topic=" + topic)

def testRegisterConsumerAndProducer(clustername, topic, consumerList, producerList):
    params = '{ "cluster": "' + clustername + '", "topic": "' + topic + '", "consumer_list":[' + consumerList + '], "producer_list":[' + producerList + "]}";
    headers = {"Content-Type":"application/json"};
    processPostRequest("testRegisterConsumerAndProducer",
                   "/qbus/topics/registerproducerandconsumer",
                  headers,
                  params)

def testResetConsumerOffset(clustername, topic, group, groupType, reset_pos):
    params = '{ "cluster": "' + clustername + '", "topic": "' + topic + '", "consumer_group":"' + group + '", "consumer_type":"' + groupType + '", "reset_pos":' + reset_pos + '}';
    headers = {"Content-Type":"application/json"};
    processPostRequest("resetConsumerOffset",
                   "/qbus/consumer/resetconsumeroffset",
                  headers,
                  params)

def testAddLogcollectConfigByHostname(clustername, hostname, topic, pathList):
    #params = '{ "cluster":"' + clustername + '", "topic":"' + topic + '", "path":[' + pathList+ '],"hostname":"' + hostname + '"}';
    params = '{"clusters":[{"cluster":"bjdt_test","config":[{"path":"/home/test_user_2/1","topic_id":"test_qbus","start_position":"beginning"}]},{"cluster":"bjdt_test","config":[{"custom_msg_prefix":"xxxx","path":"/home/test_user_2/2","topic_id":"test_qbus2","start_position":"beginning"}]}]}'
    headers = {"Content-Type":"application/json"};
    processPostRequest("",
                   "/qbus/log/addlogcollectconfigbyhostname?hostname=" + hostname,
                  headers,
                  params)

def testExpandAllTopicsToNewBorkerList(clustername):
    processGetRequest("expandAllTopicsToNewBorkerList",
                     "/qbus/topics/expandalltopicstonewbrokerlist?clustername=" + clustername)

if __name__ == "__main__":
    #testAddCluster("test", "10.143.168.133:2181,10.143.166.162:2181,10.143.166.163:2181")
    #testDeleteCluster("test")
    #testListAllCluster()
    #testGetClusterInfo("bjdt_test")
    #testGetClusterInfo("bjyt_priv_huajiao")
    #testGetTopicDetail("zzzc_priv_spider", "tt_02")
    #testAddTopic("bjcc_priv_btime", "test_t_3", 3, 1, 1, 4096000000)
    #testGetTopicDetail("zzzc_priv_spider", "spider_epoch")
    #testGetTopicDetail("bjdt_test", "zutu_qbus2test2")
    #testDeleteTopic("test", "test_t_2")
    #testAddPartition("lycc", "DjSearchPv", 6)
    #testGetConsumerDetail("bjyt_priv_huajiao_2", "qbus2hdfs_home_hdp-add_huajiao_qchat_trace_session", "analytics", "KF")
    #testDeleteTopic("test", "test_t_2")
    #testGetConsumerDetail("gzst3", "SearchEngineLog", "360_ad_front_mirrors", "KF")
    #testGetConsumerDetail("nbt_test", "tt_01", "360_ad_front_mirrors", "KF")
    #testGetConsumerDetail("bjyt_priv_huajiao", "qbus2hdfs_home_hdp-add_huajiao_live_huajiao_com-access_log", "huajiao_live_huajiao_com-access_log_group_1", "ZK")
    #testGetConsumerDetail("bjyt_priv_huajiao", "qbus2hdfs_home_hdp-huajiao_new_org_activity_web", "huajiao_new_org_activity_web_group_1", "ZK")
    #testGetLogCollectDetail("gzst3", "DjSearchPv")
    #for i in range(1000):
    #testGetLogCollectDetail("bjdt_test", "qbus2hdfs_home_hdp-like_logs_stats_log_web")
    #testGetLogCollectDetail("bjdt_test", "testlogs_huasha")
    #testGetLogCollectDetail("bjyt_priv_huajiao", "qbus2hdfs_home_hdp-add_huajiao_payment_app")
    #testGetLogCollectDetail("bjdt_pub_infra", "pcgameq_yx_login")
    #testGetLogCollectDetail("bjdt_pub_infra", "pcgameq_comment_add")
    #testGetLogCollectDetail("bjdt_pub_infra", "pcgameq_gamezone_history")
    #testGetClusterDiskInfo("bjdt_test")
    #testSetTopicMaxSize("bjdt_test", "test_topic", "100")
    #testGetOverageTopicList("bjdt_test")
    #testGetConsumerAndProducerList("gzst3",  "DjSearchPv")
    #testGetConsumerAndProducerList("bjdt_test", "test_topic1")
    #testRegisterConsumerAndProducer("bjdt_test", "test_sss", '"1","2"', '"3","4"')
    #testResetConsumerOffset("bjyt_pub_infra", "test_qbus", "t1", "KF", "0")
    #testGetConsumerDetail("bjdt_pub_infra", "wenda", "comnotice", "KF")
    #testGetTopicDetail("bjdt_pub_infra", "oscloud_sellout")
    #testGetClusterInfo("bjdt_pub_infra")
    #testGetLogCollectDetail("shbt_pub_infra", "topic_verify_push_online")
    #testGetLogCollectDetail("bjdt_test", "qadminengine_quc_log_test")
    #testResetConsumerOffset("bjyt_pub_infra", "test_qbus1", "g1", "KF", "0")
    #testGetTopicDetail("bjdt_test_infra", "test_qbus1")
    #testGetTopicDetail("bjyt_pub_infra", "doorbell_url")
    #testGetTopicDetail("shbt", "CiSearchLog")
    #testAddLogcollectConfigByHostname("bjdt_test", "lw-OptiPlex-7010", "test_qbus", '"/home/test_user_2/1","/home/test_user_2/2"')
    #testGetLogCollectDetail("bjyt_pub_infra", "test_qbus1")
    #testGetLogCollectDetail("bjyt_pub_infra", "softbaike_id")
    testGetLogCollectDetail("bjyt_pub_infra", "oss_capacity")
    #testGetLogCollectDetail("bjyt_test", "logbus_nicaifu_tmk")
    #testGetLogCollectDetail("shbt_pub_infra", "os_request")
    #testGetLogCollectDetail("bjyt_pub_infra", "zs_common_queue")
    #testGetLogCollectDetail("shbt", "mvhuid")
    #testGetLogCollectDetail("bjyt_pub_infra", "xxl_sdk_toutiao")
    #testGetLogCollectDetail("bjyt_pub_infra", "urlapk_log_upsteam")
    #testGetLogCollectDetail("bjyt_priv_huajiao_2", "qbus2hdfs_home_hdp-huajiao_new_org_pc_logs_pc_huajiao.com_app")
    #testGetLogCollectDetail("bjdt_test_infra", "test_qbus2")
    #testGetLogCollectDetail("shcp_priv_game", "pcgameq_galaxy_gm_daily")
    #testSetTopicMaxSize("bjyt_pub_infra", "liutest", "1")
    #testExpandAllTopicsToNewBorkerList("bjdt_test_infra")
    #testExpandAllTopicsToNewBorkerList("shbt")
    #testSetTopicMaxSize("bjdt_test_infra", "liutest", "1")
